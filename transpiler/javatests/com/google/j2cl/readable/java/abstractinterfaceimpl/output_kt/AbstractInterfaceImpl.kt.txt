// Generated from "abstractinterfaceimpl/AbstractInterfaceImpl.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package abstractinterfaceimpl

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName(name = "J2ktAbstractinterfaceimplMyInterface", swiftName = "AbstractinterfaceimplMyInterface", exact = true)
fun interface MyInterface {
 @ObjCName(name = "foo")
 fun foo(): Int
}

@ObjCName(name = "J2ktAbstractinterfaceimplAbstractInterfaceImpl", swiftName = "AbstractinterfaceimplAbstractInterfaceImpl", exact = true)
abstract class AbstractInterfaceImpl: MyInterface
