// Generated from "j2kt/NullabilityInferenceProblem4.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2kt

import javaemul.lang.*
import kotlin.Any
import kotlin.Comparable
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktNullabilityInferenceProblem4", exact = true)
open class NullabilityInferenceProblem4 {
 @ObjCName("J2ktJ2ktNullabilityInferenceProblem4Companion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("compareOrThrow")
  fun compareOrThrow(
   @ObjCName("withJavaLangComparable") left: Comparable<Any>,
   @ObjCName("withJavaLangComparable") right: Comparable<Any>
  ): Int {
   return left.compareTo(
    right as Any,
   )
  }
 }
}
