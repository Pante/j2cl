// Generated from "autovalue/DefaultConstructorAutoValue.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package autovalue

import javaemul.lang.*
import javaemul.lang.annotations.WasAutoValue
import kotlin.Boolean
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktAutovalueDefaultConstructorAutoValue", swiftName = "AutovalueDefaultConstructorAutoValue", exact = true)
@WasAutoValue
abstract class DefaultConstructorAutoValue {
 internal constructor()

 @ObjCName("getBooleanField")
 abstract fun getBooleanField(): Boolean

 @ObjCName("J2ktAutovalueDefaultConstructorAutoValueCompanion", swiftName = "AutovalueDefaultConstructorAutoValueCompanion", exact = true)
 companion object {
  @JvmStatic
  internal fun create_pp_autovalue(): DefaultConstructorAutoValue? {
   return autovalue.AutoValue_DefaultConstructorAutoValue.Builder().setBooleanField_pp_autovalue(true)!!.build()
  }
 }

 @ObjCName("J2ktAutovalueDefaultConstructorAutoValue_Builder", swiftName = "AutovalueDefaultConstructorAutoValue_Builder", exact = true)
 @javaemul.lang.annotations.WasAutoValue.Builder
 abstract class Builder {
  constructor()

  internal abstract fun setBooleanField_pp_autovalue(x: Boolean): Builder?

  @ObjCName("build")
  abstract fun build(): DefaultConstructorAutoValue?
 }
}
