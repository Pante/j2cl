// Generated from "autovalue/AutoValue_AutoValueWithOverrides.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package autovalue

import javaemul.lang.*
import autovalue.AutoValueWithOverrides
import kotlin.Boolean
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktAutovalueAutoValue_AutoValueWithOverrides", swiftName = "AutovalueAutoValue_AutoValueWithOverrides", exact = true)
class AutoValue_AutoValueWithOverrides: AutoValueWithOverrides {
 private val baseField: Int

 private val booleanField: Boolean

 internal constructor(baseField: Int, booleanField: Boolean) {
  this.baseField = baseField
  this.booleanField = booleanField
 }

 override fun getBaseField(): Int {
  return this.baseField
 }

 override fun getBooleanField(): Boolean {
  return this.booleanField
 }
}
