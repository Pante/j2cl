// Generated from "emptymethod/EmptyMethod.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package emptymethod

import javaemul.lang.*
import kotlin.Array
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName(name = "J2ktEmptymethodEmptyMethod", swiftName = "EmptymethodEmptyMethod", exact = true)
open class EmptyMethod {
 @ObjCName(name = "J2ktEmptymethodEmptyMethodCompanion", swiftName = "EmptymethodEmptyMethodCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName(name = "main")
  fun main(
   @ObjCName(name = "withNSStringArray") args: Array<String?>?
  ) {}
 }
}
