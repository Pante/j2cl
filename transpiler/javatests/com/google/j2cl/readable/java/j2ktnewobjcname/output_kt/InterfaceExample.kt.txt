// Generated from "j2ktnewobjcname/InterfaceExample.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktnewobjcname

import javaemul.lang.*
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktnewobjcnameInterfaceExample", swiftName = "J2ktnewobjcnameInterfaceExample", exact = true)
interface InterfaceExample {
 @ObjCName("method1")
 fun method1(
  @ObjCName("withInt", swiftName = "with") i: Int,
  @ObjCName("withLong") l: Long,
  @ObjCName("withNSString", swiftName = "with") s: String?
 ): Int

 @ObjCName("method2")
 fun method2(
  @ObjCName("withInt", swiftName = "with") i: Int,
  @ObjCName("withLong") l: Long,
  @ObjCName("withNSString", swiftName = "with") s: String?
 ): Int

 @ObjCName("J2ktJ2ktnewobjcnameInterfaceExampleCompanion", swiftName = "J2ktnewobjcnameInterfaceExampleCompanion", exact = true)
 companion object {
  @ObjCName("INT_")
  const val INT: Int = 1

  @ObjCName("LONG_")
  const val LONG: Long = 1L

  @ObjCName("STRING_")
  const val STRING: String = ""
 }
}
