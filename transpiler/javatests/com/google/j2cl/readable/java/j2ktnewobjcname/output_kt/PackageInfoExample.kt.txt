// Generated from "j2ktnewobjcname/PackageInfoExample.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktnewobjcname

import javaemul.lang.*
import j2ktnewobjcname.depspackage.FooFromDeps
import j2ktnewobjcname.srcspackage.FooFromSrcs
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktnewobjcnamePackageInfoExample", swiftName = "J2ktnewobjcnamePackageInfoExample", exact = true)
class PackageInfoExample {
 @ObjCName("apply")
 fun apply(
  @ObjCName("withFromDepsPrefixFooFromDeps", swiftName = "with") foo: FooFromDeps?
 ): FooFromDeps? {
  return foo
 }

 @ObjCName("apply")
 fun apply(
  @ObjCName("withFromSrcsPrefixFooFromSrcs", swiftName = "with") foo: FooFromSrcs?
 ): FooFromSrcs? {
  return foo
 }
}
