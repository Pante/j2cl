// Generated from "protobuf/MyMessage.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package protobuf

import javaemul.lang.*
import com.google.protobuf.GeneratedMessage
import java.lang.RuntimeException
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktProtobufMyMessage", exact = true)
open class MyMessage: GeneratedMessage {
 @ObjCName("testField")
 open val testField: Int
  get() {
   throw RuntimeException()
  }

 private constructor(testField: Int) {
  throw RuntimeException()
 }

 @ObjCName("J2ktProtobufMyMessageCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("getDefaultInstance")
  fun getDefaultInstance(): MyMessage {
   throw RuntimeException()
  }

  @JvmStatic
  @ObjCName("newBuilder")
  fun newBuilder(): MyMessage.Builder {
   throw RuntimeException()
  }
 }

 @ObjCName("J2ktProtobufMyMessage_Builder", exact = true)
 open class Builder: GeneratedMessage.Builder {
  @ObjCName("testField")
  open val testField: Int
   get() {
    throw RuntimeException()
   }

  @ObjCName("setTestField")
  open fun setTestField(
   @ObjCName("withInt") testField: Int
  ): MyMessage.Builder {
   throw RuntimeException()
  }

  @ObjCName("build")
  open fun build(): MyMessage {
   throw RuntimeException()
  }

  private constructor()
 }
}
