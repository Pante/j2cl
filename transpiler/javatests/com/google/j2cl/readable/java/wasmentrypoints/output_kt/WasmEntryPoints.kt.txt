// Generated from "wasmentrypoints/WasmEntryPoints.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package wasmentrypoints

import javaemul.lang.*
import kotlin.Float
import kotlin.Int
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName(name = "J2ktWasmentrypointsWasmEntryPoints", swiftName = "WasmentrypointsWasmEntryPoints", exact = true)
open class WasmEntryPoints {
 @ObjCName(name = "J2ktWasmentrypointsWasmEntryPointsCompanion", swiftName = "WasmentrypointsWasmEntryPointsCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName(name = "singleMatchedEntryPoint")
  fun singleMatchedEntryPoint() {}

  @JvmStatic
  @ObjCName(name = "matchedEntryPointPattern1")
  fun matchedEntryPointPattern1(
   @ObjCName(name = "withInt") x: Int
  ) {}

  @JvmStatic
  @ObjCName(name = "matchedEntryPointPattern2")
  fun matchedEntryPointPattern2(
   @ObjCName(name = "withFloat") y: Float
  ) {}

  @JvmStatic
  @ObjCName(name = "stringConversionEntryPoint")
  fun stringConversionEntryPoint(
   @ObjCName(name = "withNSString") arg: String?
  ): String? {
   return ""
  }
 }
}
