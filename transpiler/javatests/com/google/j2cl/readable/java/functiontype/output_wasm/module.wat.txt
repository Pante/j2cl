 ;;; Code for functiontype.Function [type definition]
 (type $functiontype.Function.vtable (sub (struct
  ))
 )

 ;;; Code for functiontype.FunctionImpl [type definition]
 (type $functiontype.FunctionImpl (sub $java.lang.Object (struct
  (field $vtable (ref $functiontype.FunctionImpl.vtable))
  (field $itable (ref $functiontype.FunctionImpl.itable))
  (field $$systemIdentityHashCode@java.lang.Object (mut i32))
  ))
 )
 (type $functiontype.FunctionImpl.vtable (sub $java.lang.Object.vtable (struct
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_test__functiontype_Function__void (ref $function.m_test__functiontype_Function__void))
  ))
 )
 (type $functiontype.FunctionImpl.itable (sub $itable (struct
 (field $slot0 (ref $functiontype.Function.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
 )))

;;; Code for functiontype.FunctionImpl [vtable.init]
(global $functiontype.FunctionImpl.vtable (ref $functiontype.FunctionImpl.vtable)
 (struct.new $functiontype.FunctionImpl.vtable
  (ref.func $$getClassImpl__java_lang_Class@functiontype.FunctionImpl)
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_test__functiontype_Function__void@functiontype.FunctionImpl)
 )
)

;;; Code for functiontype.FunctionImpl [itable.init]

(global $functiontype.Function.vtable@$functiontype.FunctionImpl (ref $functiontype.Function.vtable)
 (struct.new $functiontype.Function.vtable
 )
)
(global $functiontype.FunctionImpl.itable (ref $functiontype.FunctionImpl.itable)
 (struct.new $functiontype.FunctionImpl.itable
   (global.get $functiontype.Function.vtable@$functiontype.FunctionImpl)
   (ref.null struct)
   (ref.null struct)
   (ref.null struct)
   (ref.null struct)
   (ref.null struct)
   (ref.null struct)
 )
)

;;; Code for functiontype.Function [static fields]
(global $$class-initialized@functiontype.Function (mut i32)
 (i32.const 0)
)
(global $$class@functiontype.Function (mut (ref null $java.lang.Class))
 (ref.null $java.lang.Class)
)
(global $$string_|functiontype...|@functiontype.Function (mut (ref null $java.lang.String))
 (ref.null $java.lang.String)
)

;;; Code for functiontype.FunctionImpl [static fields]
(global $$class-initialized@functiontype.FunctionImpl (mut i32)
 (i32.const 0)
)
(global $$class@functiontype.FunctionImpl (mut (ref null $java.lang.Class))
 (ref.null $java.lang.Class)
)
(global $$string_|functiontype...|@functiontype.FunctionImpl (mut (ref null $java.lang.String))
 (ref.null $java.lang.String)
)

;;; Code for functiontype.Function [methods]

;;; void Function.$clinit()
(func $$clinit__void_<once>_@functiontype.Function
 ;;@ functiontype/FunctionImpl.java:18:10
 (block
  ;;@ functiontype/FunctionImpl.java:18:10
  (if (global.get $$class-initialized@functiontype.Function)
   (then
    ;;@ functiontype/FunctionImpl.java:18:10
    (return )
   )
  )
  ;;@ functiontype/FunctionImpl.java:18:10
  (global.set $$class-initialized@functiontype.Function (i32.const 1))
 )
)

;;; Class<T> Function.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@functiontype.Function
 (result (ref null $java.lang.Class))
 (block
  (if (ref.is_null (global.get $$class@functiontype.Function))
   (then
    (global.set $$class@functiontype.Function (call $m_createForInterface__java_lang_String__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|functiontype...|__java_lang_String (ref.func $$getString_|functiontype...|__java_lang_String@functiontype.Function) )))
   )
  )
  (return (global.get $$class@functiontype.Function))
 )
)

;;; String Function.$getString_|functiontype...|()
(func $$getString_|functiontype...|__java_lang_String@functiontype.Function
 (result (ref null $java.lang.String))
 (block
  (if (ref.is_null (global.get $$string_|functiontype...|@functiontype.Function))
   (then
    (global.set $$string_|functiontype...|@functiontype.Function (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "functiontype.Function")))
   )
  )
  (return (global.get $$string_|functiontype...|@functiontype.Function))
 )
)

;;; Code for functiontype.FunctionImpl [methods]

;;; FunctionImpl FunctionImpl.$create()
(func $$create__@functiontype.FunctionImpl
 (result (ref null $functiontype.FunctionImpl))
 ;;@ functiontype/FunctionImpl.java:20:13
 (local $$instance (ref null $functiontype.FunctionImpl))
 (block
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$clinit__void_<once>_@functiontype.FunctionImpl )
  ;;@ functiontype/FunctionImpl.java:20:13
  (local.set $$instance (struct.new $functiontype.FunctionImpl (ref.as_non_null (global.get $functiontype.FunctionImpl.vtable)) (ref.as_non_null (global.get $functiontype.FunctionImpl.itable)) (i32.const 0)))
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$ctor__void_$p_functiontype_FunctionImpl@functiontype.FunctionImpl (ref.as_non_null (local.get $$instance)))
  ;;@ functiontype/FunctionImpl.java:20:13
  (return (local.get $$instance))
 )
)

;;; void FunctionImpl.$ctor()
(func $$ctor__void_$p_functiontype_FunctionImpl@functiontype.FunctionImpl
 (param $this (ref null $functiontype.FunctionImpl))
 ;;@ functiontype/FunctionImpl.java:20:13
 (block
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void FunctionImpl.test(Function f)
(func $m_test__functiontype_Function__void@functiontype.FunctionImpl
 (type $function.m_test__functiontype_Function__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ functiontype/FunctionImpl.java:21:14
 (local $this (ref null $functiontype.FunctionImpl))
 (local.set $this (ref.cast (ref $functiontype.FunctionImpl) (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_test__functiontype_Function__void@functiontype.FunctionImpl)

;;; void FunctionImpl.$clinit()
(func $$clinit__void_<once>_@functiontype.FunctionImpl
 ;;@ functiontype/FunctionImpl.java:20:13
 (block
  ;;@ functiontype/FunctionImpl.java:20:13
  (if (global.get $$class-initialized@functiontype.FunctionImpl)
   (then
    ;;@ functiontype/FunctionImpl.java:20:13
    (return )
   )
  )
  ;;@ functiontype/FunctionImpl.java:20:13
  (global.set $$class-initialized@functiontype.FunctionImpl (i32.const 1))
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$clinit__void_<once>_@java.lang.Object )
 )
)

;;; Class<T> FunctionImpl.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@functiontype.FunctionImpl
 (result (ref null $java.lang.Class))
 (block
  (if (ref.is_null (global.get $$class@functiontype.FunctionImpl))
   (then
    (global.set $$class@functiontype.FunctionImpl (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|functiontype...|__java_lang_String (ref.func $$getString_|functiontype...|__java_lang_String@functiontype.FunctionImpl) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $$class@functiontype.FunctionImpl))
 )
)

;;; Class<?> FunctionImpl.$getClassImpl()
(func $$getClassImpl__java_lang_Class@functiontype.FunctionImpl
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $functiontype.FunctionImpl))
 (local.set $this (ref.cast (ref $functiontype.FunctionImpl) (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@functiontype.FunctionImpl) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@functiontype.FunctionImpl)

;;; String FunctionImpl.$getString_|functiontype...|()
(func $$getString_|functiontype...|__java_lang_String@functiontype.FunctionImpl
 (result (ref null $java.lang.String))
 (block
  (if (ref.is_null (global.get $$string_|functiontype...|@functiontype.FunctionImpl))
   (then
    (global.set $$string_|functiontype...|@functiontype.FunctionImpl (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "functiontype.FunctionImpl")))
   )
  )
  (return (global.get $$string_|functiontype...|@functiontype.FunctionImpl))
 )
)
