// Generated from "j2ktnotpassing/NullabilityScopes.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package j2ktnotpassing

import javaemul.lang.*
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktnotpassingNullabilityScopes", exact = true)
open class NullabilityScopes {
 @ObjCName("J2ktJ2ktnotpassingNullabilityScopes_NullMarkedScope", exact = true)
 open class NullMarkedScope {
  @ObjCName("testNullMarkedWildcardConstructor")
  open fun testNullMarkedWildcardConstructor(
   @ObjCName("withJ2ktnotpassingNullabilityScopes_NullMarkedScope_Foo") nullMarkedFoo: NullabilityScopes.NullMarkedScope.Foo<String>
  ) {
   NullabilityScopes.NullMarkedScope.Foo<String>(nullMarkedFoo)
   NullabilityScopes.NullMarkedScope.Foo<String>(nullMarkedFoo)
  }

  @ObjCName("testNonNullMarkedWildcardConstructor")
  open fun testNonNullMarkedWildcardConstructor(
   @ObjCName("withJ2ktnotpassingNullabilityScopes_NonNullMarkedScope_Foo") nonNullMarkedFoo: NullabilityScopes.NonNullMarkedScope.Foo<String>
  ) {
   NullabilityScopes.NonNullMarkedScope.Foo<String?>(nonNullMarkedFoo)
   NullabilityScopes.NonNullMarkedScope.Foo<String?>(nonNullMarkedFoo)
  }

  @ObjCName("J2ktJ2ktnotpassingNullabilityScopes_NullMarkedScope_Foo", exact = true)
  open class Foo<K> {
   constructor()

   constructor(
    @ObjCName("J2ktnotpassingNullabilityScopes_NullMarkedScope_Foo") foo: NullabilityScopes.NullMarkedScope.Foo<out K>
   )
  }
 }

 @ObjCName("J2ktJ2ktnotpassingNullabilityScopes_NonNullMarkedScope", exact = true)
 open class NonNullMarkedScope {
  @ObjCName("J2ktJ2ktnotpassingNullabilityScopes_NonNullMarkedScope_Foo", exact = true)
  open class Foo<K> {
   constructor()

   constructor(
    @ObjCName("J2ktnotpassingNullabilityScopes_NonNullMarkedScope_Foo") foo: NullabilityScopes.NonNullMarkedScope.Foo<out K>?
   )
  }
 }
}
