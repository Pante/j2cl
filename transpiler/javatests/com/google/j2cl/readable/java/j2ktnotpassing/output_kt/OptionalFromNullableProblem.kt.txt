// Generated from "j2ktnotpassing/OptionalFromNullableProblem.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktnotpassing

import javaemul.lang.*
import java.lang.RuntimeException
import kotlin.Any
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktnotpassingOptionalFromNullableProblem", swiftName = "J2ktnotpassingOptionalFromNullableProblem", exact = true)
open class OptionalFromNullableProblem<T> {
 @ObjCName("J2ktJ2ktnotpassingOptionalFromNullableProblemCompanion", swiftName = "J2ktnotpassingOptionalFromNullableProblemCompanion", exact = true)
 companion object {
  @JvmStatic
  internal fun <T_1> test_pp_j2ktnotpassing(value: T_1) {
   OptionalFromNullableProblem.Optional.fromNullable_pp_j2ktnotpassing<T_1 & Any>(value)
  }
 }

 @ObjCName("J2ktJ2ktnotpassingOptionalFromNullableProblem_Optional", swiftName = "J2ktnotpassingOptionalFromNullableProblem_Optional", exact = true)
 open class Optional<T: Any> internal constructor() {
  @ObjCName("J2ktJ2ktnotpassingOptionalFromNullableProblem_OptionalCompanion", swiftName = "J2ktnotpassingOptionalFromNullableProblem_OptionalCompanion", exact = true)
  companion object {
   @JvmStatic
   internal fun <T_1: Any> fromNullable_pp_j2ktnotpassing(t: T_1?): OptionalFromNullableProblem.Optional<T_1> {
    throw RuntimeException()
   }
  }
 }
}
