// Generated from "j2ktnotpassing/NullabilityConversion.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package j2ktnotpassing

import javaemul.lang.*
import kotlin.Any
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktnotpassingNullabilityConversion", exact = true)
open class NullabilityConversion {
 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Parent", exact = true)
 open class Parent {}

 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Child", exact = true)
 open class Child: NullabilityConversion.Parent() {}

 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Generic", exact = true)
 open class Generic<T: NullabilityConversion.Parent?> {}

 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests", exact = true)
 open class Tests {
  @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized", exact = true)
  open class Parameterized {
   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_SimpleToLowerWildcard", exact = true)
   open class SimpleToLowerWildcard {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_SimpleToLowerWildcardCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("nonNullToNullable")
     fun nonNullToNullable(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<NullabilityConversion.Parent>
     ): NullabilityConversion.Generic<in NullabilityConversion.Child?> {
      return it
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_SimpleLowerWildcardToLowerWildcard", exact = true)
   open class SimpleLowerWildcardToLowerWildcard {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_SimpleLowerWildcardToLowerWildcardCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("nonNullToNullable")
     fun nonNullToNullable(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<in NullabilityConversion.Parent>
     ): NullabilityConversion.Generic<in NullabilityConversion.Child?> {
      return it
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableToVariable", exact = true)
   open class VariableToVariable {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableToVariableCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("defaultToNonNull")
     fun <T: NullabilityConversion.Parent?> defaultToNonNull(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<T>
     ): NullabilityConversion.Generic<T & Any> {
      return it
     }

     @JvmStatic
     @ObjCName("nonNullToDefault")
     fun <T: NullabilityConversion.Parent?> nonNullToDefault(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<T & Any>
     ): NullabilityConversion.Generic<T> {
      return it
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableToUpperWildcard", exact = true)
   open class VariableToUpperWildcard {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableToUpperWildcardCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("defaultToNonNull")
     fun <T: NullabilityConversion.Parent?> defaultToNonNull(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<T>
     ): NullabilityConversion.Generic<out T & Any> {
      return it
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableToLowerWildcard", exact = true)
   open class VariableToLowerWildcard {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableToLowerWildcardCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("defaultToNullable")
     fun <T: NullabilityConversion.Parent?> defaultToNullable(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<T>
     ): NullabilityConversion.Generic<in T?> {
      return it
     }

     @JvmStatic
     @ObjCName("nonNullToDefault")
     fun <T: NullabilityConversion.Parent?> nonNullToDefault(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<T & Any>
     ): NullabilityConversion.Generic<in T> {
      return it
     }

     @JvmStatic
     @ObjCName("nonNullToNullable")
     fun <T: NullabilityConversion.Parent?> nonNullToNullable(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<T & Any>
     ): NullabilityConversion.Generic<in T?> {
      return it
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableUpperWildcardToUpperWildcard", exact = true)
   open class VariableUpperWildcardToUpperWildcard {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableUpperWildcardToUpperWildcardCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("defaultToNonNull")
     fun <T: NullabilityConversion.Parent?> defaultToNonNull(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<out T>
     ): NullabilityConversion.Generic<out T & Any> {
      return it
     }

     @JvmStatic
     @ObjCName("nullableToDefault")
     fun <T: NullabilityConversion.Parent?> nullableToDefault(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<out T?>
     ): NullabilityConversion.Generic<out T> {
      return it
     }

     @JvmStatic
     @ObjCName("nullableToNonNull")
     fun <T: NullabilityConversion.Parent?> nullableToNonNull(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<out T?>
     ): NullabilityConversion.Generic<out T & Any> {
      return it
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableLowerWildcardToLowerWildcard", exact = true)
   open class VariableLowerWildcardToLowerWildcard {
    @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Parameterized_VariableLowerWildcardToLowerWildcardCompanion", exact = true)
    companion object {
     @JvmStatic
     @ObjCName("defaultToNullable")
     fun <T: NullabilityConversion.Parent?> defaultToNullable(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<in T>
     ): NullabilityConversion.Generic<in T?> {
      return it
     }

     @JvmStatic
     @ObjCName("nonNullToDefault")
     fun <T: NullabilityConversion.Parent?> nonNullToDefault(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<in T & Any>
     ): NullabilityConversion.Generic<in T> {
      return it
     }

     @JvmStatic
     @ObjCName("nonNullToNullable")
     fun <T: NullabilityConversion.Parent?> nonNullToNullable(
      @ObjCName("withJ2ktnotpassingNullabilityConversion_Generic") it: NullabilityConversion.Generic<in T & Any>
     ): NullabilityConversion.Generic<in T?> {
      return it
     }
    }
   }
  }
 }
}
