// Generated from "j2ktnotpassing/NullabilityConversion.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktnotpassing

import javaemul.lang.*
import java.lang.RuntimeException
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktnotpassingNullabilityConversion", exact = true)
open class NullabilityConversion {
 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Parent", exact = true)
 interface Parent

 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Child", exact = true)
 interface Child: NullabilityConversion.Parent

 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Supplier", exact = true)
 fun interface Supplier<T: NullabilityConversion.Child?> {
  @ObjCName("get")
  fun get(): T
 }

 @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests", exact = true)
 open class Tests {
  @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Unions", exact = true)
  open class Unions {
   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_UnionsCompanion", exact = true)
   companion object {
    @JvmStatic
    @ObjCName("typeArgumentMixedToNonNull")
    fun typeArgumentMixedToNonNull(): NullabilityConversion.Child {
     try {
      throw RuntimeException()
     } catch (e: NullabilityConversion.Tests.Unions.ExceptionNonNull1) {
      return e.get()
     } catch (e: NullabilityConversion.Tests.Unions.ExceptionNullable1) {
      return e.get()
     }
    }
   }

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Unions_ExceptionNonNull1", exact = true)
   abstract class ExceptionNonNull1: RuntimeException(), NullabilityConversion.Supplier<NullabilityConversion.Child>

   @ObjCName("J2ktJ2ktnotpassingNullabilityConversion_Tests_Unions_ExceptionNullable1", exact = true)
   abstract class ExceptionNullable1: RuntimeException(), NullabilityConversion.Supplier<NullabilityConversion.Child?>
  }
 }
}
