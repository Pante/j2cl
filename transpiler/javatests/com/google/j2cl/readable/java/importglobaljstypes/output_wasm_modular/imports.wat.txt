
;;; Code for importglobaljstypes.Date.NativeDate.$Overlay [imports]
;;; End of code for importglobaljstypes.Date.NativeDate.$Overlay [imports]
;;; Code for importglobaljstypes.Number.NativeFunction [imports]
;;; End of code for importglobaljstypes.Number.NativeFunction [imports]
;;; Code for importglobaljstypes.Number.MyLiteralType [imports]
;;; End of code for importglobaljstypes.Number.MyLiteralType [imports]
;;; Code for importglobaljstypes.Number.NativeFunction.$Overlay [imports]
;;; End of code for importglobaljstypes.Number.NativeFunction.$Overlay [imports]
;;; Code for importglobaljstypes.Number.MyLiteralType.$Overlay [imports]
;;; End of code for importglobaljstypes.Number.MyLiteralType.$Overlay [imports]
;;; Code for importglobaljstypes.RegExp.NativeRegExp.$Overlay [imports]
;;; End of code for importglobaljstypes.RegExp.NativeRegExp.$Overlay [imports]
;;; Code for importglobaljstypes.Date [imports]
;;; End of code for importglobaljstypes.Date [imports]
;;; Code for importglobaljstypes.Date.NativeDate [imports]

;;; NativeDate()
(func $m_<init>__@importglobaljstypes.Date.NativeDate (import "imports" "Date.constructor") 
 (result (ref null extern))
)

;;; double NativeDate.now()
(func $m_now__double@importglobaljstypes.Date.NativeDate (import "imports" "Date.now") 
 (result f64)
)

;;; int NativeDate.getSeconds()
(func $m_getSeconds__int@importglobaljstypes.Date.NativeDate (import "imports" "Date.getSeconds") 
 (param $this (ref null extern))
 (result i32)
)
;;; End of code for importglobaljstypes.Date.NativeDate [imports]
;;; Code for importglobaljstypes.Number [imports]

;;; boolean Number.fun(double x)
(func $m_fun__double__boolean@importglobaljstypes.Number (import "imports" "Number.isInteger") 
 (param $x f64)
 (result i32)
)
;;; End of code for importglobaljstypes.Number [imports]
;;; Code for importglobaljstypes.RegExp [imports]
;;; End of code for importglobaljstypes.RegExp [imports]
;;; Code for importglobaljstypes.RegExp.NativeRegExp [imports]

;;; NativeRegExp(NativeString pattern)
(func $m_<init>__java_lang_String_NativeString@importglobaljstypes.RegExp.NativeRegExp (import "imports" "RegExp.constructor$1") 
 (param $pattern (ref null string))
 (result (ref null extern))
)

;;; boolean NativeRegExp.test(NativeString value)
(func $m_test__java_lang_String_NativeString__boolean@importglobaljstypes.RegExp.NativeRegExp (import "imports" "RegExp.test$1") 
 (param $this (ref null extern))
 (param $value (ref null string))
 (result i32)
)

;;; NativeString NativeRegExp.toString()
(func $m_toString__java_lang_String_NativeString@importglobaljstypes.RegExp.NativeRegExp (import "imports" "RegExp.toString") 
 (param $this (ref null extern))
 (result (ref null string))
)
;;; End of code for importglobaljstypes.RegExp.NativeRegExp [imports]