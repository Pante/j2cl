// Generated from "importglobaljstypes/Date.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package importglobaljstypes

import javaemul.lang.*
import jsinterop.annotations.JsPackage
import jsinterop.annotations.JsType
import kotlin.Double
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName(name = "J2ktImportglobaljstypesDate", swiftName = "ImportglobaljstypesDate", exact = true)
open class Date {
 @ObjCName(name = "copy__")
 open fun copy(
  @ObjCName(name = "withImportglobaljstypesDate_NativeDate") d: Date.NativeDate?
 ): Date.NativeDate? {
  return d
 }

 @ObjCName(name = "J2ktImportglobaljstypesDateCompanion", swiftName = "ImportglobaljstypesDateCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName(name = "now")
  fun now(
   @ObjCName(name = "withDouble") x: Double
  ): Double {
   return Date.NativeDate.now()
  }
 }

 @ObjCName(name = "J2ktImportglobaljstypesDate_NativeDate", swiftName = "ImportglobaljstypesDate_NativeDate", exact = true)
 @JsType(name = "Date", namespace = JsPackage.GLOBAL, isNative = true)
 open class NativeDate {
  @ObjCName(name = "getSeconds")
  external open fun getSeconds(): Int

  @ObjCName(name = "J2ktImportglobaljstypesDate_NativeDateCompanion", swiftName = "ImportglobaljstypesDate_NativeDateCompanion", exact = true)
  companion object {
   @JvmStatic
   @ObjCName(name = "now")
   external fun now(): Double
  }
 }
}
